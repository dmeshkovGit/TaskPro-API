{
  "openapi": "3.0.3",
  "info": {
    "version": "2.0.2",
    "title": "API for service TaskPro âš¡",
    "description": "Showing off a base routes for application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://taskpro-api-j11u.onrender.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Endpoint about user information"
    },
    {
      "name": "Boards",
      "description": "Endpoint about board information"
    },
    {
      "name": "Columns",
      "description": "Endpoint about column information"
    },
    {
      "name": "Cards",
      "description": "Endpoint about card information"
    },
    {
      "name": "Theme",
      "description": "Endpoint about themes on website"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Login error",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "The user is logged out",
            "content": {}
          },
          "401": {
            "description": "Missing token authorization",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/help": {
      "post": {
        "tags": ["Users"],
        "summary": "Ask tech-support for help",
        "security": [{ "Bearer": [true] }],
        "requestBody": {
          "description": "Object for send asking letter",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad information",
            "content": {}
          },
          "401": {
            "description": "Missing token authorization",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get info about current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing token authorization ",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": ["Auth"],
        "summary": "Refresh user tokens",
        "security": [{ "refreshBearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing token authorization ",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "tags": ["Users"],
        "summary": "Update info about user",
        "security": [{ "Bearer": [true] }],
        "requestBody": {
          "description": "Object for update user",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad information",
            "content": {}
          },
          "401": {
            "description": "Missing token authorization",
            "content": {}
          }
        }
      }
    },
    "/boards": {
      "post": {
        "tags": ["Boards"],
        "summary": "Create new board",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Boards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Boards"],
        "summary": "Get all boards",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/boards/{boardId}": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get board per id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Enter board id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OneBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Boards"],
        "summary": "Edit board per id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Enter board id"
          }
        ],
        "requestBody": {
          "description": "Object for update board",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete board per id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Enter board id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/columns": {
      "post": {
        "tags": ["Columns"],
        "summary": "Create new column",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Columns object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Columns"],
        "summary": "Get all Columns",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/columns/{columnId}": {
      "get": {
        "tags": ["Columns"],
        "summary": "Get column per id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "type": "string",
            "description": "Enter column id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OneColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Columns"],
        "summary": "Edit column per id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "type": "string",
            "description": "Enter column id"
          }
        ],
        "requestBody": {
          "description": "Columns object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Columns"],
        "summary": "Delete column per id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "type": "string",
            "description": "Enter column id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/cards": {
      "post": {
        "tags": ["Cards"],
        "summary": "Create new card",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Cards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/cards/all/{columnId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get all cards in column",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "type": "string",
            "description": "Enter column id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/cards/{cardId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get card per id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "type": "string",
            "description": "Enter card id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OneCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Cards"],
        "summary": "Edit card per id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "type": "string",
            "description": "Enter card id"
          }
        ],
        "requestBody": {
          "description": "Cards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Cards"],
        "summary": "Delete card per id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "type": "string",
            "description": "Enter card id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/theme": {
      "patch": {
        "tags": ["Theme"],
        "summary": "Change the user theme",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "user`s id"
          },
          "name": {
            "type": "string",
            "description": "user`s name"
          },
          "password": {
            "type": "string",
            "description": "user`s password"
          },
          "email": {
            "type": "string",
            "description": "user`s email",
            "format": "email"
          },
          "theme": {
            "type": "String",
            "description": "choosen theme by user"
          },
          "avatarURL": {
            "type": "string",
            "description": "user`s avatarURL"
          },
          "accessToken": {
            "type": "string",
            "description": "user`s access token"
          },
          "refreshToken": {
            "type": "string",
            "description": "user`s refresh token"
          }
        }
      },
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Example_name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "user": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            },
            "message": {
              "type": "string",
              "description": "Message about result",
              "example": "User created"
            }
          }
        },
        "example": [
          {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXNzYWdlIjoiV2h5IGFyZSB5b3UgdHJ5IHRvIGRlY29kZSBpdD8ifQ.8FnSdONYyG6MTCwm4my9XHdg8RQNEhjn-emR9DBs5Bw",
            "user": {
              "name": "Mango",
              "email": "mango123@gmail.com"
            },
            "message": "User created"
          }
        ]
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "Just a jwt token"
            },
            "user": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        },

        "example": [
          {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXNzYWdlIjoiV2h5IGFyZSB5b3UgdHJ5IHRvIGRlY29kZSBpdD8ifQ.8FnSdONYyG6MTCwm4my9XHdg8RQNEhjn-emR9DBs5Bw",
            "user": { "name": "Mango", "email": "mango123@gmail.com" }
          }
        ]
      },
      "CurrentResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "user": {
              "_id": {
                "type": "string",
                "description": "user`s id"
              },
              "name": {
                "type": "string",
                "description": "user`s name"
              },
              "password": {
                "type": "string",
                "description": "user`s password"
              },
              "email": {
                "type": "string",
                "description": "user`s email",
                "format": "email"
              },
              "theme": {
                "type": "String",
                "description": "choosen theme by user"
              },
              "avatarURL": {
                "type": "string",
                "description": "user`s avatarURL"
              },
              "accessToken": {
                "type": "string",
                "description": "user`s access token"
              },
              "refreshToken": {
                "type": "string",
                "description": "user`s refresh token"
              }
            }
          }
        },

        "example": [
          {
            "_id": "664ce5b36a1a12bf746265c7",
            "password": "$2a$10$lWIBnmq8a3sV1sXXcjpmGOax1Drw4qxNt4ViiQiB244NoUYAPox.G",
            "email": "jasonwilhem12@gmail.com",
            "name": "Jason Wilhem",
            "theme": "Light",
            "avatarURL": "http://www.gravatar.com/avatar/cae73c2e854be6c0a89fcd6bbb5b28be",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NGNlNWIzNmExYTA4YmY3NDYyNjVjNyIsImlhdCI6MTcxNjMyMjEyMn0.J5T57VS3La7R271mBFr6gzV8TlrnKYDc1lbBWjh_KmA"
          }
        ]
      },
      "CountUsersResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "number",
            "description": "Message about count of registred users",
            "example": "213"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Mango"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "mango@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "avatar": {
            "type": "file",
            "description": "avatar upload"
          }
        }
      },
      "UpdateResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "user": {
              "_id": {
                "type": "string",
                "description": "user`s id"
              },
              "name": {
                "type": "string",
                "description": "user`s name"
              },
              "email": {
                "type": "string",
                "description": "user`s email",
                "format": "email"
              },
              "theme": {
                "type": "String",
                "description": "choosen theme by user"
              },
              "avatarURL": {
                "type": "string",
                "description": "user`s avatarURL"
              }
            }
          }
        },

        "example": [
          {
            "_id": "664ce5b36a1a12bf746265c7",
            "password": "$2a$10$lWIBnmq8a3sV1sXXcjpmGOax1Drw4qxNt4ViiQiB244NoUYAPox.G",
            "email": "jasonwilhem12@gmail.com",
            "name": "Jason Wilhem",
            "theme": "Violet",
            "avatarURL": "http://www.gravatar.com/avatar/cae73c2e854be6c0a89fcd6bbb5b28be",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NGNlNWIzNmExYTA4YmY3NDYyNjVjNyIsImlhdCI6MTcxNjMyMjEyMn0.J5T57VS3La7R271mBFr6gzV8TlrnKYDc1lbBWjh_KmA"
          }
        ]
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "type": "string",
          "description": "Message about count of registred users",
          "example": {
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6eyJpZCI6IjY2NGY1NTczZTM2MjFhZWRkODkwZDhlZSIsImlhdCI6MTcxNjQ3NTMwNSwiZXhwIjoxNzE3NzcxMzA1fSwiaWF0IjoxNzE2NDgxMDE0LCJleHAiOjE3MTY1MjQyMTR9.HZUYz2LQvr0zDE46OpUQt7vG2dRGLvLW1aBvCfq8BJc",
            "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6eyJpZCI6IjY2NGY1NTczZTM2MjFhZWRkODkwZDhlZSIsImlhdCI6MTcxNjQ3NTMwNSwiZXhwIjoxNzE3NzcxMzA1fSwiaWF0IjoxNzE2NDgxMDE0LCJleHAiOjE3MTc3NzcwMTR9.qSgMOEjBrtK6XlXa9bwKM4v5xHP3CSmPQkqtx1nLfm4"
          }
        },

        "example": [
          {
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6eyJpZCI6IjY2NGY1NTczZTM2MjFhZWRkODkwZDhlZSIsImlhdCI6MTcxNjQ3NTMwNSwiZXhwIjoxNzE3NzcxMzA1fSwiaWF0IjoxNzE2NDgxMDE0LCJleHAiOjE3MTY1MjQyMTR9.HZUYz2LQvr0zDE46OpUQt7vG2dRGLvLW1aBvCfq8BJc",
            "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6eyJpZCI6IjY2NGY1NTczZTM2MjFhZWRkODkwZDhlZSIsImlhdCI6MTcxNjQ3NTMwNSwiZXhwIjoxNzE3NzcxMzA1fSwiaWF0IjoxNzE2NDgxMDE0LCJleHAiOjE3MTc3NzcwMTR9.qSgMOEjBrtK6XlXa9bwKM4v5xHP3CSmPQkqtx1nLfm4"
          }
        ]
      },
      "CreateBoardRequest": {
        "type": "object",
        "required": ["title", "icon", "background"],
        "properties": {
          "title": {
            "type": "string",

            "description": "Board title",
            "example": "Example"
          },
          "icon": {
            "type": "String",
            "description": "Board icon",
            "example": "icon-projects"
          },
          "background": {
            "type": "String",
            "description": "Board background",
            "example": null
          }
        }
      },
      "CreateBoardResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "owner": {
              "type": "string",
              "description": "Owner id",
              "example": "6665a18a8ac6850e904867be"
            },
            "columns": {
              "type": "array",
              "description": "Columns array",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": {
          "title": "first one",
          "owner": "6660847511a7ec21254bac4d",
          "columns": [],
          "_id": "6665d1d0a40295870fc225ee",
          "createdAt": "2024-06-09T16:01:20.927Z",
          "updatedAt": "2024-06-09T16:01:20.927Z"
        }
      },
      "GetAllBoardRequest": {
        "type": "object",
        "required": ["owner"],
        "properties": {
          "owner": {
            "type": "string",
            "description": "Board owner",
            "example": "6665a18a8ac6850e904867be"
          }
        }
      },
      "GetAllBoardResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "owner": {
              "type": "string",
              "description": "Owner id",
              "example": "6665a18a8ac6850e904867be"
            },
            "columns": {
              "type": "array",
              "description": "Columns array",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": [
          {
            "title": null,
            "_id": "6662fb31948f214dea2e4d3b",
            "name": "Serials",
            "owner": "6660847511a7ec21254bac4d",
            "columns": [],
            "createdAt": "2024-06-07T12:21:05.123Z",
            "updatedAt": "2024-06-07T12:21:05.123Z"
          },
          {
            "title": null,
            "_id": "6662fb31948f214dea2e4d3b",
            "name": "Serials",
            "owner": "6660847511a7ec21254bac4d",
            "columns": [],
            "createdAt": "2024-06-07T12:21:05.123Z",
            "updatedAt": "2024-06-07T12:21:05.123Z"
          }
        ]
      },
      "OneBoardRequest": {
        "type": "object",
        "required": ["boardId"],
        "properties": {
          "boardId": {
            "type": "string",
            "description": "Board id",
            "example": "6665a18a8ac6850e904867be"
          }
        }
      },
      "OneBoardResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "owner": {
              "type": "string",
              "description": "Owner id",
              "example": "6665a18a8ac6850e904867be"
            },
            "columns": {
              "type": "array",
              "description": "Columns array",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": {
          "title": null,
          "_id": "6662fb31948f214dea2e4d3b",
          "name": "Serials",
          "owner": "6660847511a7ec21254bac4d",
          "columns": [],
          "createdAt": "2024-06-07T12:21:05.123Z",
          "updatedAt": "2024-06-07T12:21:05.123Z"
        }
      },
      "EditBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board title",
            "example": "Example"
          },
          "background": {
            "type": "string",
            "description": "Board title",
            "example": "Sakura"
          },
          "icon": {
            "type": "string",
            "description": "Board title",
            "example": "Star"
          }
        }
      },
      "EditBoardResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "owner": {
              "type": "string",
              "description": "Owner id",
              "example": "6665a18a8ac6850e904867be"
            },
            "columns": {
              "type": "array",
              "description": "Columns array",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": {
          "_id": "6665a18a8ac6850e904867be",
          "title": "Films",
          "owner": "6660847511a7ec21254bac4d",
          "columns": [],
          "createdAt": "2024-06-09T12:35:22.844Z",
          "updatedAt": "2024-06-09T14:11:42.929Z"
        }
      },
      "DeleteBoardRequest": {
        "type": "object",
        "required": ["boardId", "owner"],
        "properties": {
          "boardId": {
            "type": "string",
            "description": "Board id",
            "example": "6665a18a8ac6850e904867be"
          },
          "owner": {
            "type": "string",
            "description": "Board owner",
            "example": "6665a18a8ac6850e904867be"
          }
        }
      },
      "DeleteBoardResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "owner": {
              "type": "string",
              "description": "Owner id",
              "example": "6665a18a8ac6850e904867be"
            },
            "columns": {
              "type": "array",
              "description": "Columns array",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": {
          "title": "Example",
          "_id": "6662fb31948f214dea2e4d3b",
          "name": "Serials",
          "owner": "6660847511a7ec21254bac4d",
          "columns": [],
          "createdAt": "2024-06-07T12:21:05.123Z",
          "updatedAt": "2024-06-07T12:21:05.123Z"
        }
      },
      "CreateColumnRequest": {
        "type": "object",
        "required": ["title", "boardId"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board title",
            "example": "Example"
          },
          "boardId": {
            "type": "string",
            "description": "Board id",
            "example": "6665a18a8ac6850e904867be"
          }
        }
      },
      "CreateColumnResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "boardId": {
              "type": "string",
              "description": "Board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "cards": {
              "type": "array",
              "description": "Cards array",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": {
          "title": "first one",
          "boardId": "6662fac1948f214dea2e4d28",
          "cards": [],
          "_id": "6665d5c19a5081d18ea0dee6",
          "createdAt": "2024-06-09T16:18:09.651Z",
          "updatedAt": "2024-06-09T16:18:09.651Z"
        }
      },
      "GetAllColumnRequest": {
        "type": "object",
        "required": ["boardId"],
        "properties": {
          "boardId": {
            "type": "string",
            "description": "Board id",
            "example": "6665a18a8ac6850e904867be"
          }
        }
      },
      "GetAllColumnResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "boardId": {
              "type": "string",
              "description": "Board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "cards": {
              "type": "array",
              "description": "Cards array",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": [
          {
            "_id": "6662fb27948f214dea2e4d36",
            "title": "Film",
            "boardId": "6662fac1948f214dea2e4d28",
            "cards": [],
            "createdAt": "2024-06-07T12:20:55.035Z",
            "updatedAt": "2024-06-07T12:20:55.035Z"
          },
          {
            "_id": "6662fb2c948f214dea2e4d38",
            "title": "Kino",
            "boardId": "6662fac1948f214dea2e4d28",
            "cards": [],
            "createdAt": "2024-06-07T12:21:00.284Z",
            "updatedAt": "2024-06-07T12:21:00.284Z"
          }
        ]
      },
      "OneColumnResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "boardId": {
              "type": "string",
              "description": "Board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "cards": {
              "type": "array",
              "description": "Cards array",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": [
          {
            "_id": "6662fb27948f214dea2e4d36",
            "title": "Film",
            "boardId": "6662fac1948f214dea2e4d28",
            "cards": [],
            "createdAt": "2024-06-07T12:20:55.035Z",
            "updatedAt": "2024-06-07T12:20:55.035Z"
          }
        ]
      },
      "EditColumnRequest": {
        "type": "object",
        "required": ["boardId", "columnId"],
        "properties": {
          "boardId": {
            "type": "string",
            "description": "Board id",
            "example": "6665a18a8ac6850e904867be"
          },
          "title": {
            "type": "string",
            "description": "Board title",
            "example": "Example"
          }
        }
      },
      "EditColumnResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "boardId": {
              "type": "string",
              "description": "Board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "cards": {
              "type": "array",
              "description": "Cards array",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": {
          "_id": "6662fb27948f214dea2e4d36",
          "title": "Legend",
          "boardId": "6662fac1948f214dea2e4d28",
          "cards": [],
          "createdAt": "2024-06-07T12:20:55.035Z",
          "updatedAt": "2024-06-09T15:14:44.751Z"
        }
      },
      "DeleteColumnResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "boardId": {
              "type": "string",
              "description": "Board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "cards": {
              "type": "array",
              "description": "Cards array",
              "example": []
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": {
          "_id": "6662fb27948f214dea2e4d36",
          "title": "Legend",
          "boardId": "6662fac1948f214dea2e4d28",
          "cards": [],
          "createdAt": "2024-06-07T12:20:55.035Z",
          "updatedAt": "2024-06-09T15:14:44.751Z"
        }
      },
      "CreateCardRequest": {
        "type": "object",
        "required": ["title", "priority", "description", "columnId"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Card title",
            "example": "Example"
          },
          "priority": {
            "type": "string",
            "description": "Importance of task",
            "example": "medium"
          },
          "description": {
            "type": "string",
            "description": "Description of card",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
          },
          "deadline": {
            "type": "string",
            "description": "Deadline of task",
            "example": "March 15"
          },
          "columnId": {
            "type": "string",
            "description": "Column id",
            "example": "6665a18a8ac6850e904867be"
          }
        }
      },
      "CreateCardResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "description": {
              "type": "string",
              "description": "Card description",
              "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit..."
            },
            "priority": {
              "type": "string",
              "example": "low"
            },
            "deadline": {
              "type": "string",
              "example": "12.07.2024"
            },
            "columnId": {
              "type": "string",
              "description": "Column id",
              "example": "6665a18a8ac6850e904867be"
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": {
          "title": "Kino",
          "description": "lorem ipsum",
          "priority": "without priority",
          "deadline": null,
          "columnId": "6662fb09948f214dea2e4d30",
          "_id": "6665cde8ceed0844fa1d11c1",
          "createdAt": "2024-06-09T15:44:40.964Z",
          "updatedAt": "2024-06-09T15:44:40.964Z"
        }
      },
      "GetAllCardRequest": {
        "type": "object",
        "required": ["columnId"],
        "properties": {
          "columnId": {
            "type": "string",
            "description": "Column id",
            "example": "6665a18a8ac6850e904867be"
          }
        }
      },
      "GetAllCardResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "description": {
              "type": "string",
              "description": "Card description",
              "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit..."
            },
            "priority": {
              "type": "string",
              "example": "low"
            },
            "deadline": {
              "type": "string",
              "example": "12.07.2024"
            },
            "columnId": {
              "type": "string",
              "description": "Column id",
              "example": "6665a18a8ac6850e904867be"
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": [
          {
            "_id": "6665cde8ceed0844fa1d11c1",
            "title": "Kino",
            "description": "lorem ipsum",
            "priority": "without priority",
            "deadline": null,
            "columnId": "6662fb09948f214dea2e4d30",
            "createdAt": "2024-06-09T15:44:40.964Z",
            "updatedAt": "2024-06-09T15:44:40.964Z"
          },
          {
            "_id": "6665d8677e25251fdb9f1e11",
            "title": "Kino",
            "description": "lorem ipsum",
            "priority": "without priority",
            "deadline": null,
            "columnId": "6662fb09948f214dea2e4d30",
            "createdAt": "2024-06-09T16:29:27.832Z",
            "updatedAt": "2024-06-09T16:29:27.832Z"
          }
        ]
      },
      "OneCardResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "description": {
              "type": "string",
              "description": "Card description",
              "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit..."
            },
            "priority": {
              "type": "string",
              "example": "low"
            },
            "deadline": {
              "type": "string",
              "example": "12.07.2024"
            },
            "columnId": {
              "type": "string",
              "description": "Column id",
              "example": "6665a18a8ac6850e904867be"
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": {
          "_id": "6665d8677e25251fdb9f1e11",
          "title": "Kino",
          "description": "lorem ipsum",
          "priority": "without priority",
          "deadline": null,
          "columnId": "6662fb09948f214dea2e4d30",
          "createdAt": "2024-06-09T16:29:27.832Z",
          "updatedAt": "2024-06-09T16:29:27.832Z"
        }
      },
      "EditCardRequest": {
        "type": "object",
        "required": ["cardId"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board title",
            "example": "Example"
          },
          "description": {
            "type": "string",
            "description": "Card description",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit..."
          },
          "priority": {
            "type": "string",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "example": "12.07.2024"
          }
        },
        "example": {
          "title": "Kino",
          "description": "Lorem ipsum dolor",
          "priority": "low",
          "deadline": "2024-07-21T21:00:00.000Z"
        }
      },
      "EditCardResponse": {
        "type": "object",
        "required": ["cardId"],
        "properties": {
          "columnId": {
            "type": "string",
            "description": "Column id",
            "example": "6665a18a8ac6850e904867be"
          },
          "title": {
            "type": "string",
            "description": "Board title",
            "example": "Example"
          },
          "description": {
            "type": "string",
            "description": "Card description",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit..."
          },
          "priority": {
            "type": "string",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "example": "12.07.2024"
          }
        },
        "example": {
          "title": "Kino",
          "description": "Lorem ipsum dolor",
          "priority": "low",
          "deadline": "2024-07-21T21:00:00.000Z",
          "columnId": "6662fb09948f214dea2e4d30"
        }
      },
      "DeleteCardRequest": {
        "type": "object",
        "required": ["cardId"],
        "properties": {
          "columnId": {
            "type": "string",
            "description": "Column id",
            "example": "6665a18a8ac6850e904867be"
          }
        }
      },
      "DeleteCardResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Board title",
              "example": "Example"
            },
            "description": {
              "type": "string",
              "description": "Card description",
              "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit..."
            },
            "priority": {
              "type": "string",
              "example": "low"
            },
            "deadline": {
              "type": "string",
              "example": "12.07.2024"
            },
            "columnId": {
              "type": "string",
              "description": "Column id",
              "example": "6665a18a8ac6850e904867be"
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6665a18a8ac6850e904867be"
            },
            "createAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            },
            "updateAt": {
              "type": "string",
              "example": "2024-06-09T12:35:22.844Z"
            }
          }
        },
        "example": {
          "_id": "6665d8677e25251fdb9f1e11",
          "title": "Kino",
          "description": "lorem ipsum",
          "priority": "low",
          "deadline": null,
          "columnId": "6662fb09948f214dea2e4d30",
          "createdAt": "2024-06-09T16:29:27.832Z",
          "updatedAt": "2024-06-09T16:29:27.832Z"
        }
      },
      "ThemeRequest": {
        "type": "object",
        "required": true,
        "properties": {
          "theme": {
            "type": "string",
            "description": "theme to switch",
            "example": "violet"
          }
        }
      },
      "ThemeResponse": {
        "type": "object",
        "required": true,
        "properties": {
          "message": {
            "type": "string",
            "description": "theme to switch",
            "example": "Success! Theme was changed to violet"
          }
        }
      },
      "HelpRequest": {
        "type": "object",
        "required": ["sender", "comment"],
        "properties": {
          "sender": {
            "type": "string",
            "description": "who send the email",
            "example": "mango123@gmail.com"
          },
          "comment": {
            "type": "string",
            "description": "what the problem is",
            "example": "I have a bug with ..."
          }
        }
      },
      "HelpResponse": {
        "type": "object",
        "required": true,
        "properties": {
          "message": {
            "type": "string",
            "description": "Result of send",
            "example": "Mail was sent"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "refreshBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
